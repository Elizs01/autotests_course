# Напишите функцию which_triangle(a, b, c),
# На вход поступают длины трёх сторон треугольника: a, b, c
# Программа выводит какой это треугольник type_triangle: "Равносторонний", "Равнобедренный", "Обычный".
# Либо "Не треугольник", если по переданным параметрам невозможно построить треугольник
# Например 1, 1, 1 --> "Равносторонний"

def which_triangle(a, b, c):
    # Здесь нужно написать код
    if a + b <= c or a + c <= b or c + b <= a:  # треугольник существует если сумма двух его сторон больше третьей
        type_triangle = "Не треугольник"
        print(type_triangle)
    else:
        if a == c and c == b and b == a:  # треугольник равносторонний если три его стороны равны
            type_triangle = "Равносторонний"
            print(type_triangle)
        else:
            if a == b or a == c or c == b:  # треугольник равнобедренный если две его стороны равны
                type_triangle = "Равнобедренный"
                print(type_triangle)
            else:
                type_triangle = "Обычный"
                print(type_triangle)

    return type_triangle


# Ниже НИЧЕГО НЕ НАДО ИЗМЕНЯТЬ


data = [
    (3, 3, 3),
    (1, 2, 2),
    (3, 4, 5),
    (3, 2, 3),
    (1, 2, 3)
]

test_data = [
    "Равносторонний", "Равнобедренный", "Обычный", "Равнобедренный", "Не треугольник"
]

for i, d in enumerate(data):
    assert which_triangle(*d) == test_data[i], f'С набором {d} есть ошибка, не проходит проверку'
    print(f'Тестовый набор {d} прошёл проверку')
print('Всё ок')
